name: Deploy Infrastructure via Terraform

on:
  push:
    branches:
      - main
    # Prevent retriggering on terraform state or lock changes
    paths-ignore:
      - '**/*.tfstate'
      - '**/*.tfstate.backup'
      - '.terraform/**'
      - '**/*.lock.hcl'
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Select deployment environment
        required: true
        options:
          - production
          - staging
      confirm_deployment:
        type: boolean
        description: Are you sure you want to apply changes?
        default: false

permissions:
  contents: read
  id-token: write  # Required for OIDC-based AWS auth

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}

    steps:
      - name: Stop if triggered by bot commit
        if: ${{ github.actor == 'github-actions[bot]' }}
        run: |
          echo "Skipping deployment triggered by bot commit."
          exit 0

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.8.5

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::169364190328:role/GitHubActionsRunnerRole
          aws-region: eu-west-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan \
          -var="aws-integration-token=${{ secrets.GITHUB_TOKEN_SECRET }}" \
          -var="force_redeploy_tag=${{ github.run_number }}" \
          -input=false


      - name: Terraform Apply (if confirmed)
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.confirm_deployment == 'true' }}
        run: terraform apply \
          -auto-approve \
          -var="aws-integration-token=${{ secrets.GITHUB_TOKEN_SECRET }}" \
          -var="force_redeploy_tag=${{ github.run_number }}" \
          -input=false

      - name: Output Public IP or ARN
        run: terraform output